import React, { useRef } from "react";
import { gsap } from "gsap";

import { Link } from "react-router-dom";
import { Artist } from "../config/constants/types";
import PlayButton from "./Buttons/PlayButton";

interface ShowcaseCardProps {
  artist: Artist;
  id: number;
}

export default function ShowcaseCard({ artist, id }: ShowcaseCardProps) {
  const slideMedia = useRef();

  const onSlideMediaHovered = (event) => {
    gsap.to(slideMedia.current, {
      scaleX: 1.12,
      scaleY: 1.12,
      scaleZ: 1.5,
      duration: 1.5,
    });
  };

  const onSlideMediaHoverOut = (event) => {
    gsap.to(slideMedia.current, {
      scaleX: 1,
      scaleY: 1,
      scaleZ: 1,
      duration: 1.5,
      ease: "ease-in-out",
    });
  };

  const song = artist.songs[0];

  return (
    <div
      className="  wow noraidus fadeInUp"
      data-wow-delay=".3s"
    >
      <div
        className="slide-media"
        onMouseEnter={onSlideMediaHovered}
        onMouseLeave={onSlideMediaHoverOut}
        ref={slideMedia}
      >
        <PlayButton altIcons={true} song={song} />
        <div className="item-img bg-img wow imago">
          <img
            style={{ height: "100%" }}
            src={artist.photo}
            alt={artist.name}
          />
        </div>
      </div>
      <div className="cont slide-media-action">
        <h4 className="d-flex text-white align-items-center">
          <Link to={`/artists/${id}`}>{artist.name} </Link>
          {artist.isVerified ? (
            <svg className=" w-4 ml-2 " viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12.8394 2.9707C14.8705 2.9707 16.8559 3.57266 18.545 4.7011C20.2336 5.82954 21.5498 7.43371 22.3268 9.31C23.1045 11.1863 23.3074 13.251 22.9116 15.2433C22.5152 17.2351 21.5371 19.0651 20.101 20.5011C18.6649 21.9372 16.8349 22.9153 14.8432 23.3118C12.8508 23.7082 10.7862 23.5046 8.90987 22.7276C7.03294 21.9499 5.4294 20.6337 4.30097 18.9452C3.17259 17.2566 2.57031 15.2706 2.57031 13.2396C2.57031 10.5165 3.65207 7.90437 5.57783 5.9786C7.50424 4.05283 10.1157 2.9707 12.8394 2.9707Z" fill="white"/>
              <path d="M25.5286 13.8519C25.5382 12.9569 25.3009 12.0771 24.843 11.3083C24.385 10.5395 23.724 9.91155 22.9324 9.49354C23.1233 8.95248 23.221 8.38223 23.221 7.80818C23.2496 6.55605 22.7795 5.34325 21.9143 4.43745C21.0498 3.53166 19.8598 3.00708 18.6077 2.9779C18.0552 2.97473 17.5078 3.07686 16.9934 3.2792C16.6413 2.47109 16.0609 1.7835 15.3232 1.30079C14.5862 0.818077 13.7235 0.560547 12.8418 0.560547C11.9607 0.560547 11.0981 0.818077 10.361 1.30079C9.6233 1.7835 9.04291 2.47109 8.69087 3.2792C8.17644 3.07749 7.62903 2.97537 7.07655 2.9779C5.82505 3.00708 4.63699 3.53166 3.77242 4.43619C2.90741 5.34071 2.43669 6.55161 2.46333 7.80247C2.46244 8.37652 2.55937 8.94677 2.74985 9.48783C1.98677 9.90077 1.34568 10.5072 0.890811 11.2461C0.435947 11.9845 0.183306 12.83 0.158314 13.6971C0.133259 14.5649 0.336679 15.4231 0.748092 16.1868C1.15957 16.9511 1.76464 17.5931 2.50266 18.0491C2.47729 18.2553 2.46416 18.4633 2.46333 18.6707C2.43466 19.9235 2.9045 21.1357 3.76925 22.0421C4.63445 22.9479 5.82379 23.4738 7.07655 23.5029C7.62776 23.5055 8.17517 23.4027 8.68897 23.2016C9.04164 24.0097 9.62203 24.6973 10.3597 25.18C11.0974 25.6628 11.9595 25.9197 12.8412 25.9197C13.7229 25.9197 14.5849 25.6628 15.3226 25.18C16.0603 24.6973 16.6407 24.0097 16.9934 23.2016C17.5078 23.4021 18.0558 23.5036 18.6077 23.501C19.8604 23.4718 21.0498 22.946 21.915 22.0402C22.7795 21.1338 23.2496 19.9216 23.221 18.6695C23.2204 18.4621 23.2077 18.2546 23.1817 18.0491C23.9023 17.6127 24.4979 16.9962 24.9089 16.2604C25.3206 15.5246 25.5337 14.6949 25.5286 13.8519ZM17.5344 9.81578L12.2906 17.6692C12.2246 17.7681 12.1396 17.8538 12.0407 17.9197C11.9411 17.9863 11.8301 18.032 11.7134 18.0555C11.5966 18.0789 11.4761 18.0789 11.3594 18.0555C11.2421 18.0326 11.1311 17.9863 11.0321 17.9197L10.8932 17.8055L7.98488 14.8896C7.90052 14.8053 7.83391 14.7057 7.78824 14.5959C7.74257 14.4856 7.7191 14.3682 7.7191 14.249C7.7191 14.1304 7.74257 14.0124 7.78824 13.9026C7.83391 13.7923 7.90052 13.6927 7.98488 13.6083C8.06861 13.5246 8.16883 13.458 8.27857 13.4123C8.3883 13.3666 8.50628 13.3432 8.62553 13.3432C8.74415 13.3432 8.86213 13.3666 8.97187 13.4123C9.0816 13.458 9.18182 13.5246 9.26555 13.6083L11.3956 15.7434L16.0159 8.81356C16.1491 8.61376 16.3565 8.47484 16.5925 8.42727C16.8284 8.38033 17.0733 8.42853 17.2737 8.56174C17.4735 8.69558 17.6124 8.903 17.66 9.13833C17.707 9.37429 17.6588 9.61914 17.5255 9.81958L17.5344 9.81578Z" fill="url(#paint0_linear_1626_5028)"/>
              <defs>
                <linearGradient id="paint0_linear_1626_5028" x1="18.2214" y1="14.2801" x2="11.3772" y2="31.6532" gradientUnits="userSpaceOnUse">
                  <stop stop-color="#8369F4"/>
                  <stop offset="1" stop-color="#F039E2"/>
                </linearGradient>
              </defs>
            </svg>
          ) : null}
        </h4>
        <Link to={`/artists/${id}`}>
          <h3>{artist.tokenName}</h3>
        </Link>
        <div className="buy-section-xml">
          <span className=" font-medium " >${artist.USDValue} ~ </span>
          &nbsp;
          <Link to={`/artists/${id}`} className="buy-xhn">
            Buy Coin
          </Link>
        </div>
      </div>
    </div>
  );
}
